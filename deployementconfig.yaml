Resources:
  WeatherData:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  WeatherFunctionServiceRole3463B86A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Join
          - ''
          - - 'arn:'
            - !Ref AWS::Partition
            - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  WeatherFunctionServiceRoleDefaultPolicy5D0DE2B0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - !GetAtt WeatherData.Arn
              - !Ref AWS::NoValue
        Version: 2012-10-17
      PolicyName: WeatherFunctionServiceRoleDefaultPolicy5D0DE2B0
      Roles:
        - !Ref WeatherFunctionServiceRole3463B86A

  WeatherFunctionB4B1B979:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: my-first-latest-bucket
        S3Key: data-0.0.1-SNAPSHOT.jar
      Environment:
        Variables:
          TABLE_NAME: !Ref WeatherData
      Handler: com.example.WeatherUpdates.StreamLambdaHandler
      MemorySize: 1024
      Role: !GetAtt WeatherFunctionServiceRole3463B86A.Arn
      Runtime: java17
      Timeout: 30
    DependsOn:
      - WeatherFunctionServiceRoleDefaultPolicy5D0DE2B0
      - WeatherFunctionServiceRole3463B86A

  LambdaRole3A44B857:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17

  LambdaRoleDefaultPolicy75625A82:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource: !GetAtt WeatherData.Arn
        Version: 2012-10-17
      PolicyName: LambdaRoleDefaultPolicy75625A82
      Roles:
        - !Ref LambdaRole3A44B857

  WeatherApi47AB99B3:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: This service serves weather data.
      Name: Weather Service

  WeatherApiDeployment026EB496003c16b50da7f9ac2db4d9cfa0ae5ddd:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: This service serves weather data.
      RestApiId: !Ref WeatherApi47AB99B3
    DependsOn:
      - WeatherApiweatherGETA7426538
      - WeatherApiweather8A6CAA0B

  WeatherApiDeploymentStageprod83750DF8:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref WeatherApiDeployment026EB496003c16b50da7f9ac2db4d9cfa0ae5ddd
      RestApiId: !Ref WeatherApi47AB99B3
      StageName: prod

  WeatherApiweather8A6CAA0B:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt WeatherApi47AB99B3.RootResourceId
      PathPart: weather
      RestApiId: !Ref WeatherApi47AB99B3

  WeatherApiweatherGETApiPermissionWeatherAppStackWeatherApi37B19730GETweatherC2343649:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt WeatherFunctionB4B1B979.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:'
          - !Ref AWS::Partition
          - ':execute-api:'
          - !Ref AWS::Region
          - ':'
          - !Ref AWS::AccountId
          - ':'
          - !Ref WeatherApi47AB99B3
          - /
          - !Ref WeatherApiDeploymentStageprod83750DF8
          - /GET/weather

  WeatherApiweatherGETApiPermissionTestWeatherAppStackWeatherApi37B19730GETweatherBEDBC174:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt WeatherFunctionB4B1B979.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:'
          - !Ref AWS::Partition
          - ':execute-api:'
          - !Ref AWS::Region
          - ':'
          - !Ref AWS::AccountId
          - ':'
          - !Ref WeatherApi47AB99B3
          - /test-invoke-stage/GET/weather

  WeatherApiweatherGETA7426538:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join
          - ''
          - - 'arn:'
            - !Ref AWS::Partition
            - ':apigateway:'
            - !Ref AWS::Region
            - ':lambda:path/2015-03-31/functions/'
            - !GetAtt WeatherFunctionB4B1B979.Arn
            - /invocations
      ResourceId: !Ref WeatherApiweather8A6CAA0B
      RestApiId: !Ref WeatherApi47AB99B3

  WeatherEventBus9D15A0EF:
    Type: AWS::Events::EventBus
    Properties:
      Name: WeatherEventBus

  WeatherRule6E70B9D2:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
        - Arn: !GetAtt WeatherFunctionB4B1B979.Arn
          Id: Target0

  WeatherRuleAllowEventRuleWeatherAppStackWeatherFunctionF2F56C77E7AAC8BE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt WeatherFunctionB4B1B979.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt WeatherRule6E70B9D2.Arn

Outputs:
  WeatherApiEndpoint9062F38A:
    Value: !Join
      - ''
      - - https://
        - !Ref WeatherApi47AB99B3
        - .execute-api.
        - !Ref AWS::Region
        - .
        - !Ref AWS::URLSuffix
        - /
        - !Ref WeatherApiDeploymentStageprod83750DF8
        - /